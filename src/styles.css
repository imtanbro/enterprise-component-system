/* Base styles */
:root {
  --primary-color: #4a90e2;
  --success-color: #34d399;
  --warning-color: #fbbf24;
  --danger-color: #ef4444;
  --text-primary: #1f2937;
  --text-secondary: #4b5563;
  --bg-primary: #ffffff;
  --bg-secondary: #f3f4f6;
  --border-color: #e5e7eb;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
}

.dark {
  --primary-color: #60a5fa;
  --success-color: #34d399;
  --warning-color: #fbbf24;
  --danger-color: #ef4444;
  --text-primary: #f3f4f6;
  --text-secondary: #9ca3af;
  --bg-primary: #1f2937;
  --bg-secondary: #111827;
  --border-color: #374151;
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  background-color: var(--bg-secondary);
  color: var(--text-primary);
  line-height: 1.5;
}

/* Layout */
.layout-container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}

/* Navbar */
.navbar {
  background-color: var(--bg-primary);
  box-shadow: var(--shadow-md);
}

.navbar-container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 1rem;
  height: 4rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.brand {
  font-size: 1.25rem;
  font-weight: bold;
  color: var(--text-primary);
  text-decoration: none;
}

.nav-links {
  display: none;
}

.nav-links a {
  color: var(--text-secondary);
  text-decoration: none;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  transition: color 0.2s, background-color 0.2s;
}

.nav-links a:hover {
  color: var(--text-primary);
  background-color: var(--bg-secondary);
}

.mobile-menu-button,
.theme-toggle {
  padding: 0.5rem;
  border: none;
  background-color: var(--bg-secondary);
  color: var(--text-secondary);
  border-radius: 0.375rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.mobile-menu {
  display: none;
  background-color: var(--bg-primary);
  padding: 1rem;
}

.mobile-menu.active {
  display: block;
}

.mobile-menu a {
  display: block;
  padding: 0.75rem 1rem;
  color: var(--text-secondary);
  text-decoration: none;
  border-radius: 0.375rem;
}

.mobile-menu a:hover {
  background-color: var(--bg-secondary);
  color: var(--text-primary);
}

/* Dashboard */
.dashboard {
  padding: 1rem;
}

.dashboard-grid {
  display: grid;
  gap: 1.5rem;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Adjust for responsive design */
  position: relative; /* This ensures that the panels stay within the bounds */
}

.panel {
  background-color: var(--bg-primary);
  border-radius: 0.5rem;
  box-shadow: var(--shadow-lg);
  padding: 1rem;
  position: relative; /* Change this from absolute to relative */
  transition: transform 0.3s ease; /* Smooth transition for dragging */
}

.panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.panel-title {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-primary);
}

.panel-controls {
  display: flex;
  gap: 0.5rem;
}

.panel-button {
  padding: 0.25rem;
  border: none;
  background-color: var(--bg-secondary);
  color: var(--text-secondary);
  border-radius: 0.25rem;
  cursor: pointer;
}

.panel-content {
  transition: all 0.3s ease;
}

.panel-content.collapsed {
  display: none;
}

.panel.maximized {
  grid-column: 1 / -1;
  grid-row: 1 / -1;
}

/* When panel is being dragged, apply some styles */
.panel.dragging {
  opacity: 0.7;
  z-index: 1000;
}

/* When panel is maximized, expand it to fill the grid */
.panel.maximized {
  grid-column: 1 / -1; /* Take up the entire width */
  grid-row: 1 / -1; /* Take up the entire height */
  transition: all 0.3s ease; /* Smooth transition */
}

/* You can optionally add transition effects to smoothly move panels */
.panel-content {
  transition: transform 0.2s ease-in-out;
}

/* Collapsing panel */
.panel-content.collapsed {
  display: none;
}

.stat-card {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  border-radius: 0.5rem;
  margin-bottom: 1rem;
}

.stat-card.primary {
  background-color: rgba(74, 144, 226, 0.1);
}

.stat-card.success {
  background-color: rgba(52, 211, 153, 0.1);
}

.stat-value {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--text-primary);
}

.stat-label {
  font-size: 0.875rem;
  color: var(--text-secondary);
}

.activity-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.5rem;
  border-radius: 0.375rem;
  transition: background-color 0.2s;
}

.activity-item:hover {
  background-color: var(--bg-secondary);
}

.activity-indicator {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background-color: var(--primary-color);
}

.quick-actions {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
}

.action-button {
  padding: 1rem;
  text-align: center;
  background-color: var(--bg-secondary);
  border: none;
  border-radius: 0.5rem;
  color: var(--text-primary);
  cursor: pointer;
  transition: background-color 0.2s;
}

.action-button:hover {
  background-color: var(--border-color);
}

/* Card component specific styles */
.card {
  position: absolute;
  padding: 15px;
  width: 150px;
  cursor: move;
  border-radius: 10px;
  transition: transform 0.2s, box-shadow 0.2s;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
}

.card p {
  margin: 0;
  text-align: center;
  font-size: 1rem;
}

/* Mobile First Design for Card */
.card {
  background-color: var(--bg-primary);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
}

.card:hover {
  transform: scale(1.05);
  box-shadow: var(--shadow-md);
}

.card.dark {
  background-color: var(--bg-primary);
  color: var(--text-primary);
}

.card.dark:hover {
  box-shadow: var(--shadow-lg);
}

/* Data Grid */
.data-grid-container {
  width: 100%;
  height: calc(100vh - 5rem);
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background-color: var(--bg-primary);
  justify-content: center;
  align-items: center;
}

.data-grid-toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  background-color: var(--bg-secondary);
  border-radius: 0.5rem;
  gap: 1rem;
  width: 100%; /* Ensure toolbar takes the full width */
}

.search-box {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background-color: var(--bg-primary);
  padding: 0.5rem;
  border-radius: 0.375rem;
  flex: 1;
}

.search-box input {
  border: none;
  background: none;
  outline: none;
  width: 100%;
  color: var(--text-primary);
}

.export-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: opacity 0.2s;
}

.export-button:hover {
  opacity: 0.9;
}

.data-grid-wrapper {
  flex: 1;
  overflow: auto;
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  position: relative;
  width: 100%;
  max-width: 100%;
}

.data-grid-header {
  display: flex;
  position: sticky;
  top: 0;
  z-index: 10;
  background-color: var(--bg-secondary);
  border-bottom: 2px solid var(--border-color);
  justify-content: flex-start; /* Align header content to the left */
  align-items: center;
  width: 100%;
}

.data-grid-body {
  overflow: auto;
  width: 100%;
}

.data-grid-row {
  display: flex;
  border-bottom: 1px solid var(--border-color);
  width: 100%; /* Ensure each row takes full width */
}

.data-grid-cell {
  padding: 0.75rem;
  border-right: 1px solid var(--border-color);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  background-color: var(--bg-primary);
  flex: 1; /* Allow cells to expand equally */
  min-width: 100px;
}

.header-cell {
  font-weight: 600;
  user-select: none;
  text-align: center;
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
  width: 100%;
}

.header-controls {
  display: flex;
  gap: 0.25rem;
}

.header-controls button {
  padding: 0.25rem;
  border: none;
  background: none;
  color: var(--text-secondary);
  cursor: pointer;
  border-radius: 0.25rem;
  transition: all 0.2s;
}

.header-controls button:hover {
  background-color: var(--bg-primary);
  color: var(--text-primary);
}

.frozen {
  position: sticky;
  left: 0;
  z-index: 5;
  box-shadow: 2px 0 4px rgba(0, 0, 0, 0.1);
}

.status-badge {
  padding: 0.25rem 0.5rem;
  border-radius: 1rem;
  font-size: 0.875rem;
  font-weight: 500;
}

.status-badge.in-transit {
  background-color: rgba(var(--primary-color-rgb), 0.1);
  color: var(--primary-color);
}

.status-badge.delivered {
  background-color: rgba(var(--success-color-rgb), 0.1);
  color: var(--success-color);
}

.status-badge.pending {
  background-color: rgba(var(--warning-color-rgb), 0.1);
  color: var(--warning-color);
}

.status-badge.delayed {
  background-color: rgba(var(--danger-color-rgb), 0.1);
  color: var(--danger-color);
}

.priority-badge {
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  font-weight: 500;
}

.priority-badge.high {
  background-color: rgba(var(--danger-color-rgb), 0.1);
  color: var(--danger-color);
}

.priority-badge.medium {
  background-color: rgba(var(--warning-color-rgb), 0.1);
  color: var(--warning-color);
}

.priority-badge.low {
  background-color: rgba(var(--success-color-rgb), 0.1);
  color: var(--success-color);
}

/* Media Queries */
@media (min-width: 768px) {
  .nav-links {
    display: flex;
    gap: 2rem;
  }

  .mobile-menu-button {
    display: none;
  }

  .dashboard-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .dashboard-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Mobile Optimizations */
@media (max-width: 768px) {
  .data-grid-container {
    padding: 0.5rem;
    height: auto; /* Allow auto height to fit content */
    min-height: calc(100vh - 4rem);
  }

  /* Stack toolbar buttons vertically */
  .data-grid-toolbar {
    flex-direction: column;
    align-items: stretch; /* Stretch buttons to fit width */
    gap: 0.5rem;
  }

  /* Full-width search bar */
  .search-box {
    width: 100%;
  }

  /* Export button takes full width */
  .export-button {
    width: 100%;
    justify-content: center;
  }

  /* Allow horizontal scrolling if needed */
  .data-grid-wrapper {
    width: 100%;
    overflow-x: auto;
  }

  /* Stack headers vertically */
  .data-grid-header {
    flex-direction: column;
    align-items: flex-start;
    padding: 0.5rem;
  }

  /* Make rows stack in a single column */
  .data-grid-row {
    display: block;
    width: 100%;
    padding: 0.75rem;
    border-bottom: 1px solid var(--border-color);
  }

  /* Each cell should be a full row */
  .data-grid-cell {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    border: none;
    text-align: left;
    width: 100%;
    border-bottom: 1px solid var(--border-color);
  }

  /* Add label before data */
  .data-grid-cell::before {
    content: attr(data-label); /* Use column name */
    font-weight: 600;
    display: block;
    margin-bottom: 0.25rem;
  }

  /* Ensure headers are aligned properly */
  .header-cell {
    text-align: left;
    padding: 0.5rem;
    font-weight: 600;
  }

  /* Make filter buttons align better */
  .header-controls {
    flex-direction: column;
    width: 100%;
  }

  .header-controls button {
    width: 100%;
    margin-top: 0.5rem;
  }
}
